// <auto-generated />
using System;
using FinanzasBE.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace FinanzasBE.Migrations
{
    [DbContext(typeof(FinanzasContext))]
    partial class FinanzasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("FinanzasBE.Entities.Bank", b =>
                {
                    b.Property<int>("Ruc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("BusinessName")
                        .HasColumnType("text");

                    b.Property<double>("TEADolares")
                        .HasColumnType("double precision");

                    b.Property<double>("TEASoles")
                        .HasColumnType("double precision");

                    b.HasKey("Ruc");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("FinanzasBE.Entities.Bill", b =>
                {
                    b.Property<int>("BillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<double>("Amount")
                        .HasColumnType("double precision");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<int>("DraweeId")
                        .HasColumnType("integer");

                    b.Property<int>("DrawerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("BillId");

                    b.HasIndex("DrawerId");

                    b.ToTable("Bills");
                });

            modelBuilder.Entity("FinanzasBE.Entities.Pyme", b =>
                {
                    b.Property<int>("Ruc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("BusinessName")
                        .HasColumnType("text");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Ruc");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Pymes");
                });

            modelBuilder.Entity("FinanzasBE.Entities.User", b =>
                {
                    b.Property<long>("Username")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.HasKey("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FinanzasBE.Entities.Bill", b =>
                {
                    b.HasOne("FinanzasBE.Entities.Pyme", "Drawer")
                        .WithMany("Bills")
                        .HasForeignKey("DrawerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinanzasBE.Entities.Pyme", b =>
                {
                    b.HasOne("FinanzasBE.Entities.User", "User")
                        .WithOne("Pyme")
                        .HasForeignKey("FinanzasBE.Entities.Pyme", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
